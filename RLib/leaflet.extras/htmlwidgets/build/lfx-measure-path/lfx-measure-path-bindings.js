!function(e){var t={};function n(s){if(t[s])return t[s].exports;var o=t[s]={i:s,l:!1,exports:{}};return e[s].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:s})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){LeafletWidget.methods.setMeasurementOptions=function(e){(function(){this.measurementOptions=e}).call(this)},LeafletWidget.methods.enableMeasurements=function(){(function(){var e=this.measurementOptions||{};this.eachLayer(function(t){"function"==typeof t.showMeasurements&&t.showMeasurements(e)})}).call(this)},LeafletWidget.methods.disableMeasurements=function(){(function(){this.eachLayer(function(e){"function"==typeof e.hideMeasurements&&e.hideMeasurements()})}).call(this)},LeafletWidget.methods.refreshMeasurements=function(){(function(){this.eachLayer(function(e){"function"==typeof e.updateMeasurements&&e.updateMeasurements()})}).call(this)}}]);
//# sourceMappingURL=lfx-measure-path-bindings.js.map